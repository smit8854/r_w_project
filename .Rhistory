, family = binomial(link="logit")
)
r.glmer.logbin.mdl.base <- glmer(
R.Indicator ~
f3f2 + (1|Child)
,
data = rw.clean
, family = poisson(link="log")
)
# Type 3 SS
Anova(r.glmer.mdl.logbin.base,Type="III")
library(car)
Anova(r.glmer.mdl.logbin.base,Type="III")
table(rw.clean$R.Indicator)
r.glmer.mdl.base <- glmer(
R.Indicator ~
f3f2 + (1|Child)
,
data = rw.clean,
family = binomial(link="logit"),
tol=.005
)
r.glmer.mdl.base <- glmer(
R.Indicator ~
f3f2 + (1|Child)
,
data = rw.clean,
family = binomial(link="logit"),
tolerance=.005
)
r.glmer.mdl.base <- glmer(
R.Indicator ~
I(scale(f3f2)) + (1|Child)
,
data = rw.clean,
family = binomial(link="logit"),
tolerance=.005
)
r.glmer.mdl.base <- glmer(
R.Indicator ~
I(scale(f3f2)) + (1|Child)
,
data = rw.clean,
family = binomial(link="logit")
)
Anova(r.glmer.mdl.base,Type="III")
summary(r.glmer.mdl.base)
exp(-.2155)
r.glmer.logbin.mdl.base <- glmer(
R.Indicator ~
I(scale(f3f2)) + (1|Child)
,
data = rw.clean,
family = poisson(link="log")
)
Anova(r.glmer.mdl.logbin.base,Type="III")
r.glmer.logbin.mdl.base
Anova(r.glmer.logbin.mdl.base,Type="III")
summary(r.glmer.logbin.mdl.base)
lmer(data = rw.gt, formula = "rating ~ f3f2 + (1|Child)") -> rw.MEmodel
summary(rw.MEmodel)
library(MuMIn)
r.squaredGLMM(r.glmer.logbin.mdl.base)
r.squaredLR(r.glmer.logbin.mdl.base)
lmer(data = rw.gt, formula = "rating ~ f3f2 + (1|Child)") -> rw.MEmodel
summary(rw.MEmodel)
r.squaredLR(rw.MEmodel)
gtheory::gstudy(data = rw.clean, formula = "rating ~ f3f2 + (1|Child)")
# regression coefficients
summary(r.glmer.logbin.mdl.base)
gtheory::gstudy(data = rw.clean, formula = "rating ~ Target + f3f2 + (1|Rater) + (1|Child)")
gtheory::gstudy(data = rw.clean, formula = "R.Indicator ~ Target + f3f2 + (1|Rater) + (1|Child)")
gtheory::gstudy(data = rw.clean, formula = "R.Indicator ~ f3f2 + (1|Rater) + (1|Child)")
gtheory::gstudy(data = rw.clean, formula = "rating ~ f3f2 + (1|Rater) + (1|Child)")
r.glmer.logbin.mdl.rating <- glmer(
R.Indicator ~
rating + (1|Child)
,
data = rw.clean,
family = poisson(link="log")
)
# Type 3 SS
Anova(r.glmer.logbin.mdl.rating,Type="III")
# regression coefficients
summary(r.glmer.logbin.mdl.rating)
r.squaredGLMM(r.glmer.logbin.mdl.rating)
r.squaredLR(r.glmer.logbin.mdl.rating)
rw.merge %>% distinct(word.x)
rw.merge <- read.csv("C:\\Users\\tenni\\OneDrive\\Documents\\GitHub\\r_w_project\\data\\rw_merge.csv")
acous <- read.csv("C:\\Users\\tenni\\OneDrive\\Documents\\GitHub\\r_w_project\\data\\acoustic.csv")
rw.merge %>%
mutate(
R.Indicator=1*(transc=="r"),
R.plus.Indicator=1*(tran %in% c("r", "$r", "$r:w")),
Target=as.factor(target),
Transcription=as.factor(transc),
Rater=as.factor(Listener),
Child=as.factor(subject),
Word=as.factor(word.x)
) %>%
select(
rating,
R.Indicator,
R.plus.Indicator,
Target,
Transcription,
Rater,
f3f2,
f3,
Child,
Word
) %>%
filter(!is.na(rating)) ->
rw.clean
library(tidyverse)
library(gtheory)
library(lme4)
library(car)
library(MuMIn)
rw.merge %>%
mutate(
R.Indicator=1*(transc=="r"),
R.plus.Indicator=1*(tran %in% c("r", "$r", "$r:w")),
Target=as.factor(target),
Transcription=as.factor(transc),
Rater=as.factor(Listener),
Child=as.factor(subject),
Word=as.factor(word.x)
) %>%
select(
rating,
R.Indicator,
R.plus.Indicator,
Target,
Transcription,
Rater,
f3f2,
f3,
Child,
Word
) %>%
filter(!is.na(rating)) ->
rw.clean
r.glmer.logbin.mdl.base <- glmer(
R.Indicator ~
I(scale(f3f2)) + (1|Child)
,
data = rw.clean,
family = poisson(link="log")
)
# Type 3 SS
Anova(r.glmer.logbin.mdl.base,Type="III")
# regression coefficients
summary(r.glmer.logbin.mdl.base)
r.squaredGLMM(r.glmer.logbin.mdl.base)
r.squaredLR(r.glmer.logbin.mdl.base)
r.glmer.logbin.mdl.rating <- glmer(
R.Indicator ~
rating + (1|Child) + (1|Rater)
,
data = rw.clean,
family = poisson(link="log")
)
# Type 3 SS
Anova(r.glmer.logbin.mdl.rating,Type="III")
# regression coefficients
summary(r.glmer.logbin.mdl.rating)
r.squaredGLMM(r.glmer.logbin.mdl.rating)
r.squaredLR(r.glmer.logbin.mdl.rating)
gtheory::gstudy(data = rw.clean, formula = "R.Indicator ~ rating + (1|Rater) + (1|Child)")
vas <- read.csv("data\\raw_rw_data.csv")
acous <- read.csv("data\\raw_acoustic_data.csv")
vowel <- read.csv("data\\target_words_vowel_type.csv")
triple <- read.csv("data\\RW_triple_tracker.csv")
names(vas)[1] <- "ExperimentName"
names(vas)[2] <- "Version"
names(vas)[which(names(vas)=="Subject")] <- "Listener"
names(acous)=c("sound", "word", "test", "tran", "timeLab", "f1", "f2", "f3", "f3f2")
vas.orig <- vas
vas <- vas.orig %>% mutate(ChildWordKey = sub("\\_.*", "", Filename))
library(readr)
library(tidyverse)
library(dplyr)
library(ggplot2)
vas.orig <- vas
vas <- vas.orig %>% mutate(ChildWordKey = sub("\\_.*", "", Filename))
acous.orig  <- acous
acous <- acous.orig %>%
mutate(ChildID = sub(".*_", "", sound)) %>% #creates the ChildID
mutate(., ChildWordKey = paste(ChildID, test, word, sep="")) # concatenates Child, Test, and Word
acous.orig <- acous #save original important in separate table
acous <- acous.orig %>%
group_by(ChildID) %>%
mutate(f3f2norm = scale(f3f2))
head(triple)
head(triple) %>% view()
table(triple$phones)
mosaic::xyplot(data=triple, onset_f1_ifc~onsetf1)
triple <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
f3f2min = min(f3_onset_med, f3_qrtr_med) - min(f2_onset_med, f2_qrtr_med)
)
head(triple) %>% view()
head(triple) %>% view()
head(acous) %>% view()
head(triple) %>% view()
head(acous) %>% view()
head(triple) %>% view()
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
childwordkey = paste("00",spkr,"L",agemos,gender,session,"Test",testnumber,word)
) %>%
select(f3f2onset, f3f2qrtr, childwordkey)
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
childwordkey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word)
) %>%
select(f3f2onset, f3f2qrtr, childwordkey)
head(triple_formerge) %>% view()
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
childwordkey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word, sep="")
) %>%
select(f3f2onset, f3f2qrtr, childwordkey)
head(triple_formerge) %>% view()
head(triple) %>% view()
head(triple_formerge) %>% view()
001L39FS3Test64rain
head(triple) %>% view()
acous %>% select(childwordkey=="001L39FS3Test64rain")
names(acous)
acous %>% select(ChildWordKey=="001L39FS3Test64rain")
acous %>% filter(ChildWordKey=="001L39FS3Test64rain")
acous %>% filter(ChildWordKey=="001L39FS3Test64rain") %>% view()
head(triple_formerge) %>% view()
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
ChildWordKey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word, sep="")
) %>%
select(f3f2onset, f3f2qrtr, ChildWordKey)
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
ChildWordKey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word, sep="")
) %>%
select(f3f2onset, f3f2qrtr, ChildWordKey)
names(vas)[1] <- "ExperimentName"
names(vas)[2] <- "Version"
names(vas)[which(names(vas)=="Subject")] <- "Listener"
names(acous)=c("sound", "word", "test", "tran", "timeLab", "f1", "f2", "f3", "f3f2")
vas.orig <- vas
vas <- vas.orig %>% mutate(ChildWordKey = sub("\\_.*", "", Filename))
acous.orig  <- acous
acous <- acous.orig %>%
mutate(ChildID = sub(".*_", "", sound)) %>% #creates the ChildID
mutate(., ChildWordKey = paste(ChildID, test, word, sep="")) # concatenates Child, Test, and Word
acous.orig <- acous #save original important in separate table
acous <- acous.orig %>%
group_by(ChildID) %>%
mutate(f3f2norm = scale(f3f2))
vas <- read.csv("data\\raw_rw_data.csv")
acous <- read.csv("data\\raw_acoustic_data.csv")
vowel <- read.csv("data\\target_words_vowel_type.csv")
triple <- read.csv("data\\RW_triple_tracker.csv")
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
ChildWordKey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word, sep="")
) %>%
select(f3f2onset, f3f2qrtr, ChildWordKey)
names(vas)[1] <- "ExperimentName"
names(vas)[2] <- "Version"
names(vas)[which(names(vas)=="Subject")] <- "Listener"
names(acous)=c("sound", "word", "test", "tran", "timeLab", "f1", "f2", "f3", "f3f2")
vas.orig <- vas
vas <- vas.orig %>% mutate(ChildWordKey = sub("\\_.*", "", Filename))
acous.orig  <- acous
acous <- acous.orig %>%
mutate(ChildID = sub(".*_", "", sound)) %>% #creates the ChildID
mutate(., ChildWordKey = paste(ChildID, test, word, sep="")) # concatenates Child, Test, and Word
acous.orig <- acous #save original important in separate table
acous <- acous.orig %>%
group_by(ChildID) %>%
mutate(f3f2norm = scale(f3f2))
acous.vowel <- merge(
acous, vowel,
by = c("word"),
all=TRUE
)
orig.acous <- acous
acous <- acous.vowel
write.csv(acous, file=file.choose())
dim(vas)
dim(acous)
names(vas)
names(acous)
head(acous)
head(vas)
#verify we've got all the same kids
cbind(
vas %>% filter(include == "yes") %>% select(ChildID) %>% distinct(),
acous %>% select(ChildID) %>% distinct()
)
#verify we've got all the same kids
cbind(
vas %>% filter(include == "yes") %>% select(ChildWordKey) %>% distinct(),
acous %>% select(ChildWordKey) %>% distinct()
)
rw.merge <- merge(
(vas %>% filter(include=="yes")),acous,
by = c("ChildWordKey"),
all=TRUE
)
dim(rw.merge)
rw.merge <- merge(
(vas %>% filter(include=="yes")),acous,triple_formerge,
by = c("ChildWordKey"),
all=TRUE
)
rw.merge <- merge(
(vas %>% filter(include=="yes")), acous, triple_formerge,
by = c("ChildWordKey", "ChildWordKey"),
all=TRUE
)
rw.merge.part1 <- merge(
(vas %>% filter(include=="yes")),acous,
by = c("ChildWordKey"),
all=TRUE
)
dim(rw.merge.part1)
rw.merge.tt <- merge(
rw.merge.part1, triple_formerge,
by = c("ChildWordKey"),
all=TRUE
)
dim(rw.merge.tt)
dim(triple_formerge)
head(rw.merge.tt) %>% view()
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
ChildWordKey = paste("00",spkr,"L",age_mos,gender,session,"Test",testnumber,word, sep="")
)
triple_formerge %>% select(ChildWordKey=="00100L51MS4Test11web")
triple_formerge %>% filter(ChildWordKey=="00100L51MS4Test11web")
triple_formerge %>% filter(ChildWordKey=="00100L51MS4Test11web") %>% view()
x=c(1,11,111)
str_pad(x, 3, pad = "0")
triple_formerge <- triple %>%
mutate(
f3f2onset = f3_onset_med - f2_onset_med,
f3f2qrtr = f3_qrtr_med - f2_qrtr_med,
ChildWordKey = paste(str_pad(spkr,3,pad="0"),"L",age_mos,gender,session,"Test",testnumber,word, sep="")
) %>%
select(f3f2onset, f3f2qrtr, ChildWordKey)
rw.merge.tt <- merge(
rw.merge.part1, triple_formerge,
by = c("ChildWordKey"),
all=TRUE
)
dim(rw.merge.part1)
dim(rw.merge.tt)
rw.merge.tt %>% head() %>% view()
triple %>% filter(ChildWordKey=="001L39FS3Test14web")
triple_formerge %>% filter(ChildWordKey=="001L39FS3Test14web")
acous %>% filter(ChildWordKey=="001L39FS3Test14web")
vas %>% filter(ChildWordKey=="001L39FS3Test14web")
rw.merge.part1 <- merge(
(vas %>% filter(include=="yes")),acous,
by = c("ChildWordKey"),
all=TRUE
)
rw.merge.part1 <- merge(
(vas %>% filter(include=="yes")),acous,
by = c("ChildWordKey"),
all=FALSE
)
72918-71117
1801/126
rw.merge.tt <- merge(
rw.merge.part1, triple_formerge,
by = c("ChildWordKey"),
all=FALSE
)
rw.merge.tt <- merge(
rw.merge.part1, triple_formerge,
by = c("ChildWordKey"),
all=TRUE
)
rw.merge.tt %>% head() %>% view()
rw.merge.tt %>% filter(is.na(f3f2onset)) %>% view()
names(triple)
triple %>% filter(spkr==8, age_mos==42, word=="rock")
triple %>% filter(spkr==8, age_mos==42)
triple %>% filter(spkr=="8")
view(triple)
names(acous)
acous %>% filter(ChildID==8)
head(acous)
acous %>% filter(ChildWordKey == "008L42MS3Test11rock")
vas %>% filter(ChildWordKey == "008L42MS3Test11rock")
rw.merge.tt <- merge(
rw.merge.part1, triple_formerge,
by = c("ChildWordKey"),
all=FALSE
)
write.csv(rw.merge.tt, file=file.choose())
rw.merge.tt <- read.csv("data\\rw_merge_tt.csv")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(ggpubr)
library(GGally)
ggplot(
data=(rw.merge.tt %>% filter(
#ChildID == unique(acous$ChildID)[22],
tran == c("w", "r")
)),
aes(x=f3f2onset, color=tran)
) +
geom_density() +
scale_colour_manual(values=cbPalette) + theme_tufte()
ggplot(
data=(rw.merge.tt %>% filter(
#ChildID == unique(acous$ChildID)[22],
tran == c("w", "r")
)),
aes(x=f3f2qrtr, color=tran)
) +
geom_density() +
scale_colour_manual(values=cbPalette) + theme_tufte()
ggplot(
data=(rw.merge.tt %>% filter(
#ChildID == unique(acous$ChildID)[22],
tran == c("w", "r")
)),
aes(x=f3f2, color=tran)
) +
geom_density() +
scale_colour_manual(values=cbPalette) + theme_tufte()
ggplot(
data=(rw.merge.tt %>% filter(
#ChildID == unique(acous$ChildID)[22],
tran == c("w", "r")
)),
aes(x=f3f2onset, color=tran)
) +
geom_density() +
scale_colour_manual(values=cbPalette) + theme_tufte()
ggplot(
data=rw.merge.tt,
aes(x=f3f2onset, y=rating)
) +
theme_tufte()+
geom_point(col="gray", alpha=.2)+
geom_smooth(method=lm, lwd=2)+
xlab("F3F2 Distance") + ylab("Listener Rating: 0=R 1=W")
ggplot(
data=(rw.merge %>% filter(!is.na(target), tran == c("r", "w"))),
aes(x=f3f2onset, color=tran))+geom_density(size=2)+
scale_colour_manual(name = "Transcription", values=c("#7a0019", "#ffcc33")) +
scale_y_continuous(breaks=NULL, name=NULL) +
scale_x_continuous(breaks=seq(0,3000,500), name="F3F2 Distance") +
theme_tufte()
ggplot(
data=(rw.merge.tt %>% filter(!is.na(target), tran == c("r", "w"))),
aes(x=f3f2onset, color=tran))+geom_density(size=2)+
scale_colour_manual(name = "Transcription", values=c("#7a0019", "#ffcc33")) +
scale_y_continuous(breaks=NULL, name=NULL) +
scale_x_continuous(breaks=seq(0,3000,500), name="F3F2 Distance") +
theme_tufte()
ggplot(data=(rw.merge.tt %>% filter(!is.na(target), tran == c("$r", "r", "$w", "w"))), aes(x=f3f2onset, color=tran))+geom_density(size=2)+
scale_colour_manual(values=cbPalette) + theme_tufte()
p1=ggplot(data=(rw.merge.tt %>% filter(transc=="w")), aes(y=f3f2onset, x=rating)) +
labs(title="w") +
geom_density_2d() +
scale_y_continuous(limits=c(500,3000))
p2=ggplot(data=(rw.merge.tt  %>% filter(transc=="r")), aes(y=f3f2onset, x=rating)) +
labs(title="r") +
geom_density_2d() +
scale_y_continuous(limits=c(500,3000))
p3=ggplot(data=(rw.merge.tt  %>% filter(transc=="rw")), aes(y=f3f2onset, x=rating)) +
labs(title="rw") +
geom_density_2d() +
scale_y_continuous(limits=c(500,3000))
p4=ggplot(data=(rw.merge.tt  %>% filter(transc=="wr")), aes(y=f3f2onset, x=rating)) +
labs(title="wr") +
geom_density_2d() +
scale_y_continuous(limits=c(500,3000))
ggarrange(p1,p2, p3, p4)
rw.merge.tt %>%
filter(transc == "r" & rating < 0.125 | transc == "w" & rating > 0.875) %>%
ggplot() +
aes(x = rating, y = f3f2onset) +
geom_density_2d() +
scale_y_continuous(limits=c(500,3000)) +
scale_colour_manual(values=cbPalette) + theme_tufte() +
facet_wrap(~transc, scales = "free")
